function [y,t]=ChebStabPoly(nder,m,nadd,choice);%	[y,t]=ChebPoly(nder,m,nadd,choice);%%	t 		represents the Chebyshev values at %	y		collocation points %	nder	highest derivative, t=t(m,m+nadd,nder+1)%	m		number of rows in t%	nadd	add number of columns more than m%	choice	reduce t to special properties%		0	full 	-1<y<1%		1	even 	0<y<1%		2	odd		0<y<1%		3	even 	-1<y<0%		4	odd 	-1<y<0%		5	full 	0<y<1%		6	full 	-1<y<0%	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% D .Sšderberg 981009                     %                      %% Dept. of Mechanics/FaxenLaboratoriet    %%% KTH/Rouyal Inst. of Technology          %%% 100 44 Stockholm                        %%% SWEDEN                                  %%% daniels@mech.kth.se                     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nder=nder+1;% no derivarive gives index 1if ismember(choice,1:4),	% double size	m=2*m;	nadd=2*nadd;	if choice==1 | choice==2,		% 0<y<1		if choice==1,			mc=[1:m/2+1];			% even			nc=[1:2:m+nadd+1];		else			mc=[1:m/2];			% odd			nc=[2:2:m+nadd];		end;	else		% -1<y<0		if choice==3,			mc=[m/2+1:m+1];			% even			nc=[1:2:m+nadd+1];		else			mc=[m/2+2:m+1];			% odd			nc=[2:2:m+nadd];		end;	end;end;if ismember(choice,5:6),	% full	nc=[1:m+nadd+1];	% double size	m=2*m;	nadd=2*nadd;	if choice==5,		% 0<y<1		mc=[1:m/2+1];	else		% -1<y<0		mc=[m/2+1:m+1];	end;end;mm=[0:m]';y=cos(mm*pi/m);nn=[0:m+nadd];% gives tt(:,:,1)=cos(mm*nn*pi/m);	% gives dt/dy, d2t/dx2, d3t/dx3 and d4t/dx4.t(:,1,2:nder)=zeros(m+1,1,nder-1);t(:,2,2:nder)=t(:,1,1:nder-1);t(:,3,2:nder)=4*t(:,2,1:nder-1);for k=3:m+nadd+2,	t(:,k+1,2:nder)=2*k*t(:,k,1:nder-1)+k*t(:,k-1,2:nder)/(k-2);end;if ismember(choice,1:6),	t=t(mc,nc,:);	y=y(mc);	if choice==4,		t=-t;	endelse	t=t(:,1:m+nadd+1,:);	end;