%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Microsoft Windows 7.
%%Title: C:\Users\Max\Dropbox\Programmering\Modfys\2014 - MyonLab\fitteddata2.eps
%%CreationDate: 05/22/2014  11:57:24
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 3082 3910 0 0 -3082 656 3366 4 MP
PP
-3910 0 0 3082 3910 0 0 -3082 656 3366 5 MP stroke
4 w
DO
0 sg
 656 3366 mt  656  284 L
 656  284 mt  656  284 L
1144 3366 mt 1144  284 L
1144  284 mt 1144  284 L
1633 3366 mt 1633  284 L
1633  284 mt 1633  284 L
2122 3366 mt 2122  284 L
2122  284 mt 2122  284 L
2611 3366 mt 2611  284 L
2611  284 mt 2611  284 L
3099 3366 mt 3099  284 L
3099  284 mt 3099  284 L
3588 3366 mt 3588  284 L
3588  284 mt 3588  284 L
4077 3366 mt 4077  284 L
4077  284 mt 4077  284 L
4566 3366 mt 4566  284 L
4566  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566 3366 L
 656 3023 mt 4566 3023 L
4566 3023 mt 4566 3023 L
 656 2681 mt 4566 2681 L
4566 2681 mt 4566 2681 L
 656 2338 mt 4566 2338 L
4566 2338 mt 4566 2338 L
 656 1996 mt 4566 1996 L
4566 1996 mt 4566 1996 L
 656 1653 mt 4566 1653 L
4566 1653 mt 4566 1653 L
 656 1311 mt 4566 1311 L
4566 1311 mt 4566 1311 L
 656  968 mt 4566  968 L
4566  968 mt 4566  968 L
 656  626 mt 4566  626 L
4566  626 mt 4566  626 L
 656  284 mt 4566  284 L
4566  284 mt 4566  284 L
SO
6 w
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
 656 3366 mt 4566 3366 L
 656 3366 mt  656  284 L
 656 3366 mt  656 3326 L
 656  284 mt  656  323 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 623 3511 mt 
(0) s
1144 3366 mt 1144 3326 L
1144  284 mt 1144  323 L
1044 3511 mt 
(200) s
1633 3366 mt 1633 3326 L
1633  284 mt 1633  323 L
1533 3511 mt 
(400) s
2122 3366 mt 2122 3326 L
2122  284 mt 2122  323 L
2022 3511 mt 
(600) s
2611 3366 mt 2611 3326 L
2611  284 mt 2611  323 L
2511 3511 mt 
(800) s
3099 3366 mt 3099 3326 L
3099  284 mt 3099  323 L
2966 3511 mt 
(1000) s
3588 3366 mt 3588 3326 L
3588  284 mt 3588  323 L
3455 3511 mt 
(1200) s
4077 3366 mt 4077 3326 L
4077  284 mt 4077  323 L
3944 3511 mt 
(1400) s
4566 3366 mt 4566 3326 L
4566  284 mt 4566  323 L
4433 3511 mt 
(1600) s
 656 3366 mt  695 3366 L
4566 3366 mt 4526 3366 L
 555 3410 mt 
(0) s
 656 3023 mt  695 3023 L
4566 3023 mt 4526 3023 L
 421 3067 mt 
(100) s
 656 2681 mt  695 2681 L
4566 2681 mt 4526 2681 L
 421 2725 mt 
(200) s
 656 2338 mt  695 2338 L
4566 2338 mt 4526 2338 L
 421 2382 mt 
(300) s
 656 1996 mt  695 1996 L
4566 1996 mt 4526 1996 L
 421 2040 mt 
(400) s
 656 1653 mt  695 1653 L
4566 1653 mt 4526 1653 L
 421 1697 mt 
(500) s
 656 1311 mt  695 1311 L
4566 1311 mt 4526 1311 L
 421 1355 mt 
(600) s
 656  968 mt  695  968 L
4566  968 mt 4526  968 L
 421 1012 mt 
(700) s
 656  626 mt  695  626 L
4566  626 mt 4526  626 L
 421  670 mt 
(800) s
 656  284 mt  695  284 L
4566  284 mt 4526  284 L
 421  328 mt 
(900) s
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
gs 656 284 3911 3083 rc
gr

24 W
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
692 335 PD
24 W
729 1136 PD
24 W
766 1468 PD
24 W
803 1506 PD
24 W
840 1585 PD
24 W
877 1797 PD
24 W
913 1955 PD
24 W
950 1989 PD
24 W
987 2020 PD
24 W
1024 2126 PD
24 W
1061 2348 PD
24 W
1098 2294 PD
24 W
1135 2369 PD
24 W
1171 2520 PD
24 W
1208 2537 PD
24 W
1245 2629 PD
24 W
1282 2657 PD
24 W
1319 2742 PD
24 W
1356 2715 PD
24 W
1393 2739 PD
24 W
1429 2739 PD
24 W
1466 2910 PD
24 W
1503 2797 PD
24 W
1540 2965 PD
24 W
1577 2965 PD
24 W
1614 2982 PD
24 W
1650 3016 PD
24 W
1687 3020 PD
24 W
1724 3074 PD
24 W
1761 3105 PD
24 W
1798 3102 PD
24 W
1835 3150 PD
24 W
1872 3095 PD
24 W
1908 3160 PD
24 W
1945 3112 PD
24 W
1982 3194 PD
24 W
2019 3174 PD
24 W
2056 3153 PD
24 W
2093 3235 PD
24 W
2130 3215 PD
24 W
2166 3218 PD
24 W
2203 3225 PD
24 W
2240 3208 PD
24 W
2277 3218 PD
24 W
2314 3242 PD
24 W
2351 3246 PD
24 W
2388 3229 PD
24 W
2424 3249 PD
24 W
2461 3235 PD
24 W
2498 3290 PD
24 W
2535 3297 PD
24 W
2572 3290 PD
24 W
2609 3283 PD
24 W
2645 3270 PD
24 W
2682 3294 PD
24 W
2719 3300 PD
24 W
2756 3300 PD
24 W
2793 3331 PD
24 W
2830 3297 PD
24 W
2867 3294 PD
24 W
2903 3321 PD
24 W
2940 3290 PD
24 W
2977 3324 PD
24 W
3014 3328 PD
24 W
3051 3318 PD
24 W
3088 3348 PD
24 W
3125 3324 PD
24 W
3161 3324 PD
24 W
3198 3335 PD
24 W
3235 3324 PD
24 W
3272 3335 PD
24 W
3309 3335 PD
24 W
3346 3318 PD
24 W
3383 3342 PD
24 W
3419 3314 PD
24 W
3456 3328 PD
24 W
3493 3311 PD
24 W
3530 3345 PD
24 W
3567 3338 PD
24 W
3604 3348 PD
24 W
3640 3321 PD
24 W
3677 3331 PD
24 W
3714 3335 PD
24 W
3751 3331 PD
24 W
3788 3324 PD
24 W
3825 3331 PD
24 W
3862 3321 PD
24 W
3898 3331 PD
24 W
3935 3338 PD
24 W
3972 3338 PD
24 W
4009 3359 PD
24 W
4046 3355 PD
24 W
4083 3331 PD
24 W
4120 3321 PD
24 W
4156 3352 PD
24 W
4193 3359 PD
24 W
4230 3338 PD
24 W
4267 3352 PD
24 W
4304 3352 PD
24 W
4341 3348 PD
gs 656 284 3911 3083 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
4 0 4 0 3 0 4 0 4 0 3 0 4 0 4 0 
3 0 4 0 3 0 4 0 4 0 3 0 4 0 4 0 
3 0 4 0 4 0 3 0 1 0 3 0 4 0 3 0 
4 1 4 0 3 0 4 0 3 0 4 0 4 0 1 0 
2 0 4 0 4 0 3 0 4 0 4 0 3 0 4 0 
4 0 3 0 2 0 2 0 4 0 3 0 4 0 3 0 
4 0 4 0 3 0 4 0 4 0 2 0 1 0 4 0 
4 0 3 0 4 0 4 0 3 0 4 0 4 0 3 0 
2 0 2 0 4 0 3 0 4 0 3 0 4 0 4 0 
3 0 4 0 4 0 2 0 1 0 4 0 4 0 3 0 
4 0 4 0 3 0 4 0 4 0 3 0 3 0 1 0 
3 0 4 0 4 0 3 0 4 0 4 0 3 0 4 0 
4 0 3 0 4 1 4 0 3 0 4 0 4 0 3 0 
4 0 4 0 3 0 4 0 3 0 4 0 4 0 3 0 
4 0 4 0 3 0 4 0 4 0 3 0 1 0 3 0 
4 0 3 0 4 0 4 0 3 0 4 0 3 0 4 0 
4 0 1 0 2 0 4 0 4 0 3 0 4 0 4 0 
3 0 4 0 4 0 3 0 1 0 3 0 4 0 3 0 
4 0 3 0 4 1 4 0 3 0 4 0 4 0 1 0 
2 0 4 0 4 0 3 0 4 0 4 0 3 0 4 0 
4 0 3 0 2 0 2 0 4 0 3 0 4 0 3 0 
4 0 4 0 3 0 4 0 4 0 2 0 1 0 4 0 
4 0 3 0 4 0 4 0 3 0 4 0 4 1 3 0 
3 0 1 0 3 0 4 0 4 0 3 0 4 0 4 0 
3 0 4 0 4 0 3 0 4 0 4 0 3 0 4 0 
4 0 3 0 4 0 4 0 3 0 4 0 3 0 4 0 
4 0 3 0 4 1 4 0 3 0 4 0 4 0 3 0 
4 0 4 0 3 0 4 0 4 0 3 0 4 0 3 0 
4 0 4 0 3 0 4 0 4 0 3 0 4 0 4 0 
3 1 4 0 4 0 3 0 1 0 3 0 4 0 3 0 
4 0 3 0 4 0 4 0 3 0 4 0 4 0 1 0 
2 0 4 0 4 0 3 0 4 0 4 1 3 0 4 0 
4 0 3 0 2 0 2 0 4 0 3 0 4 0 3 0 
4 0 4 0 3 0 4 0 4 0 2 0 1 0 4 0 
4 1 3 0 4 0 4 0 3 0 4 0 4 0 3 0 
2 0 2 0 3 0 4 0 4 0 3 0 4 0 4 0 
3 1 4 0 4 0 2 0 1 0 4 0 4 0 3 0 
4 0 4 0 3 0 3323 3327 300 MP stroke
4 0 4 0 3 0 3 1 1 0 3 0 4 0 4 0 
3 0 4 0 4 0 3 0 4 0 4 0 3 0 4 0 
4 1 3 0 4 0 4 0 3 0 4 0 3 0 4 0 
4 0 3 0 4 0 4 1 3 0 4 0 4 0 3 0 
4 0 4 0 3 0 1 0 3 0 4 0 3 1 4 0 
3 0 4 0 4 0 3 0 4 0 4 0 1 0 2 0 
4 0 4 1 3 0 4 0 4 0 3 0 4 0 4 0 
3 0 1 0 3 0 4 1 3 0 4 0 3 0 4 0 
4 0 3 0 4 0 4 1 1 0 2 0 4 0 4 0 
3 0 4 0 4 0 3 0 4 1 4 0 3 0 2 0 
2 0 3 0 4 0 4 0 3 1 4 0 4 0 3 0 
4 0 4 0 2 0 1 0 4 1 4 0 3 0 4 0 
4 0 3 0 4 0 4 1 3 0 3 0 1 0 3 0 
4 0 4 0 3 1 4 0 4 0 3 0 4 0 4 0 
3 1 4 0 4 0 3 0 4 0 4 0 3 1 4 0 
3 0 4 0 4 0 3 1 4 0 4 0 3 0 4 0 
4 0 3 1 4 0 4 0 3 0 4 0 4 1 3 0 
4 0 3 0 4 0 4 1 3 0 4 0 4 0 3 1 
4 0 4 0 3 0 4 0 4 1 3 0 4 0 4 0 
3 1 1 0 3 0 4 0 3 0 4 0 3 1 4 0 
4 0 3 0 4 1 4 0 1 0 2 0 4 0 4 1 
3 0 4 0 4 0 3 1 4 0 4 0 3 1 2 0 
2 0 3 0 4 0 4 1 3 0 4 0 4 0 3 1 
4 0 4 0 2 0 1 1 4 0 4 0 3 0 4 1 
4 0 3 0 4 1 3 0 4 0 3 0 1 1 3 0 
4 0 4 1 3 0 4 0 4 1 3 0 4 0 4 1 
2 0 1 0 4 0 4 1 3 0 4 0 4 1 3 0 
4 0 3 1 4 0 3 0 1 0 3 1 4 0 4 0 
3 1 4 0 4 1 3 0 4 0 4 1 3 0 4 1 
4 0 3 0 4 1 3 0 4 1 4 0 3 0 4 1 
4 0 3 1 4 0 4 1 3 0 4 0 4 1 3 0 
4 1 4 0 3 1 1 0 3 0 4 1 3 0 4 0 
3 1 4 0 4 1 3 0 4 1 4 0 1 1 2 0 
4 0 4 1 3 0 4 1 4 0 3 1 4 0 4 1 
3 0 1 1 3 0 3 1 4 0 4 1 3 0 4 1 
4 0 3 1 4 0 4 1 1 0 2 1 4 0 4 1 
3 0 4 1 4 1 3 0 4 1 3 0 4 1 2 0 
2 1 3 0 4 1 2305 3253 300 MP stroke
4 0 3 1 4 1 4 0 3 1 4 1 4 0 2 1 
1 0 4 1 4 0 3 1 4 1 4 0 3 1 4 1 
3 1 4 0 3 1 1 0 3 1 4 0 4 1 3 1 
4 1 4 0 3 1 4 1 4 1 3 0 0 1 4 0 
4 1 3 1 4 1 3 1 4 0 4 1 3 1 4 1 
4 1 3 1 4 0 4 1 3 1 4 1 4 1 3 1 
4 1 4 1 3 0 4 1 4 1 3 1 4 1 3 1 
4 1 4 1 3 1 4 1 4 1 3 1 4 1 4 1 
3 1 4 1 4 1 3 1 4 1 4 1 3 1 1 0 
3 1 3 1 4 1 4 1 3 1 4 1 4 2 3 1 
4 1 4 1 1 0 2 1 4 1 4 1 3 2 4 1 
4 1 3 1 4 1 3 2 4 1 2 0 2 1 3 1 
4 2 4 1 3 1 4 1 4 2 3 1 4 1 4 2 
2 0 1 1 4 1 4 2 3 1 4 1 4 2 3 1 
4 1 3 2 4 1 3 1 1 1 3 1 4 2 4 1 
3 2 4 1 4 2 3 1 4 2 4 1 2 1 1 1 
4 1 4 2 3 1 4 2 3 2 4 1 4 2 3 1 
4 2 3 2 1 0 3 1 4 2 4 2 3 2 4 1 
4 2 3 2 4 2 4 1 3 2 4 2 4 2 3 2 
4 1 3 2 4 2 4 2 3 2 4 2 4 2 3 2 
4 2 4 2 3 2 4 2 4 2 3 2 4 2 4 2 
3 2 1 0 3 2 3 2 4 2 4 3 3 2 4 2 
4 2 3 2 4 3 4 2 1 0 2 2 4 2 4 3 
3 2 4 2 4 3 3 2 4 2 3 3 4 2 2 1 
2 2 3 2 4 3 4 2 3 3 4 2 4 3 3 2 
4 3 4 3 1 1 2 1 4 3 4 3 3 2 4 3 
4 3 3 3 4 2 3 3 4 3 2 2 2 1 3 3 
4 3 4 2 3 3 4 3 4 3 3 3 4 3 4 3 
2 2 1 1 4 4 4 3 3 3 4 3 3 3 4 3 
4 4 3 3 4 3 3 3 1 0 3 4 4 3 4 3 
3 4 4 3 4 4 3 3 4 4 4 3 3 3 0 1 
4 3 4 4 3 4 4 3 3 4 4 4 4 4 3 3 
4 4 4 4 3 4 4 4 4 4 3 4 4 4 4 4 
3 4 4 4 4 4 3 4 0 1 4 3 3 5 4 4 
4 4 3 4 4 5 4 4 3 5 4 4 4 4 0 1 
3 4 4 4 4 5 3 5 4 4 4 5 3 5 4 4 
3 5 4 5 1 1 3 4 3 5 4 5 4 5 3 5 
4 5 4 5 3 5 1291 2655 300 MP stroke
4 5 4 5 1 2 2 4 4 5 4 5 3 6 4 5 
4 5 3 6 4 5 3 6 4 6 2 2 2 3 3 6 
4 6 4 5 3 6 4 6 4 6 3 6 4 6 4 6 
2 4 1 2 4 6 4 6 3 7 4 6 3 6 4 7 
4 6 3 7 4 6 3 5 1 2 3 6 4 7 4 7 
3 6 4 7 4 7 3 7 4 7 4 7 2 6 1 1 
4 7 3 7 4 8 4 7 3 7 4 8 4 7 3 8 
4 7 3 7 1 1 3 8 4 7 4 8 3 8 4 8 
4 8 3 8 4 8 4 8 3 9 4 8 3 8 4 9 
4 8 3 9 4 8 4 9 3 9 4 9 4 9 3 8 
4 10 4 9 3 9 4 9 4 9 3 10 4 9 3 10 
4 9 1 2 3 8 3 10 4 9 4 10 3 10 4 10 
4 10 3 10 4 11 4 10 1 3 2 7 4 11 4 10 
3 11 4 11 4 11 3 11 4 11 3 11 4 11 2 4 
2 7 3 11 4 12 4 11 3 12 4 11 4 12 3 12 
4 12 4 12 1 6 2 6 4 12 4 12 3 13 4 12 
3 13 4 12 4 13 3 13 4 13 2 8 2 5 3 13 
4 13 4 14 3 13 4 14 4 13 3 14 4 14 4 14 
2 10 1 4 4 14 3 15 4 14 4 14 3 15 4 15 
4 15 3 15 4 15 3 12 1 3 3 15 4 15 4 16 
3 16 4 15 4 16 3 16 4 16 4 17 3 14 0 2 
4 16 3 17 4 17 4 17 3 17 4 17 4 17 3 17 
4 18 4 18 692 988 179 MP stroke
gr

c9
0 sg
2477 3654 mt 
(Time) s
 339 2262 mt  -90 rotate
(Detected muons) s
90 rotate
 639 3409 mt 
( ) s
4550  326 mt 
( ) s
1657 2791 mt 
(Tau: 198.0046) s
1657 2928 mt 
(95% confidence interval: ) s
2953 2859 mt 
(204.7905) s
2953 2997 mt 
(191.6539) s
1 sg
0 334 1652 0 0 -334 2855 678 4 MP
PP
-1652 0 0 334 1652 0 0 -334 2855 678 5 MP stroke
4 w
DO
SO
6 w
0 sg
2855  344 mt 4507  344 L
2855  678 mt 4507  678 L
4507  678 mt 4507  344 L
2855  678 mt 2855  344 L
2855  678 mt 4507  678 L
2855  678 mt 2855  344 L
2855  344 mt 4507  344 L
2855  678 mt 4507  678 L
4507  678 mt 4507  344 L
2855  678 mt 2855  344 L
3327  479 mt 
(Observations vs. time) s
gs 2855 344 1653 335 rc
gs 3036 363 147 147 rc
24 W
c8
3109 436 PD
gr

c8
gr

c8
0 sg
3327  628 mt 
(fitted exponential) s
gs 2855 344 1653 335 rc
c9
363 0 2927 585 2 MP stroke
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
